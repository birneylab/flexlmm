/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {
    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }
    withName:ESTIMATE_FREQ {
        ext.when = { vcf }
    }
    withName:FULL_GRM {
        ext.args = '--maf 0.01'
        publishDir = [
            path: { "${params.outdir}/relatedness_matrix" },
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            mode: params.publish_dir_mode,
        ]
    }
    withName:LOCO_GRM {
        ext.args = '--maf 0.01'
    }
    withName:TRANSFORM_PHENOTYPES {
        ext.prefix = 'transformed_phenotypes'
    }
    withName:VALIDATE_FORMULAS {
        publishDir = [
            path: { "${params.outdir}/model_formulas" },
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            mode: params.publish_dir_mode,
        ]
    }
    withName:MATCH_SAMPLES {
        publishDir = [
            path: { "${params.outdir}/model_matrices/${meta.pheno}/${meta.chr}/" },
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            mode: params.publish_dir_mode,
        ]
    }
    withName:AIREML {
        publishDir = [
            path: { "${params.outdir}/variance_components/${meta.pheno}" },
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            mode: params.publish_dir_mode,
        ]
    }
    withName:CHOLESKY {
        publishDir = [
            path: { "${params.outdir}/rotation_matrix/${meta.pheno}" },
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            mode: params.publish_dir_mode,
        ]
    }
    withName:DECORRELATE {
        publishDir = [
            path: { "${params.outdir}/rotated_model_matrices/${meta.pheno}/${meta.chr}/" },
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            mode: params.publish_dir_mode,
        ]
    }
    withName:FIT_MODEL_ORIG {
        publishDir = [
            path: { "${params.outdir}/gwas/${meta.pheno}" },
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            mode: params.publish_dir_mode
        ]
    }
}
