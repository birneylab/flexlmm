/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {
    withName:CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }
    withName:TRANSFORM_PHENOTYPES {
        ext.prefix = 'transformed_phenotypes'
    }
    withName:FULL_GRM {
        ext.args = "--maf ${params.maf_min_grm}"
        publishDir = [
            path: { "${params.outdir}/relatedness_matrix/full_genome" },
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            mode: params.publish_dir_mode,
        ]
    }
    withName:LOCO_GRM {
        ext.args = "--maf ${params.maf_min_grm}"
    }
    withName:AIREML {
        publishDir = [
            path: { "${params.outdir}/variance_components/${meta.pheno}" },
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            mode: params.publish_dir_mode,
            enabled: { meta.chr == "full_genome" }
        ]
    }
    withName:RELATEDNESS {
        publishDir = [
            path: {
                meta.chr ?
                "${params.outdir}/plots/relatedness_matrix/loco" :
                "${params.outdir}/plots/relatedness_matrix/full_genome"
            },
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            mode: params.publish_dir_mode,
        ]
    }
    withName:FIT_MODEL_ORIG {
        publishDir = [
            path: { "${params.outdir}/gwas/${meta.pheno_name}" },
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            mode: params.publish_dir_mode
        ]
    }
    withName:COMPUTE_HERITABILITY {
        publishDir = [
            path: { "${params.outdir}/" },
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            mode: params.publish_dir_mode
        ]
    }
    withName:SUMMARISE_BY_CHR {
        publishDir = [
            path: { "${params.outdir}/permutations" },
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            mode: params.publish_dir_mode
        ]
    }
    withName:MANHATTAN {
        publishDir = [
            path: { "${params.outdir}/plots/manhattan" },
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            mode: params.publish_dir_mode
        ]
    }
    withName:QQ {
        publishDir = [
            path: { "${params.outdir}/plots/qq" },
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            mode: params.publish_dir_mode
        ]
    }
}
